name: CI (Tests)

on:
  workflow_dispatch:
    inputs:
      token:
        description: 'YouTube API token (you will need to get this through the scripts/get_token.py script)'
        required: true

jobs:
  test-lib:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11-dev"
          - "pypy-3.6"
          - "pypy-3.7"

    name: Test
    runs-on: ${{ matrix.os }}

    steps:
      - name: Sleep to avoid ratelimits
        uses: 1itachi/sleep-random@v1.0.0
        with:
          minutes: '1'
          random: 'true'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Write data
        run: |
          mkdir secrets
          echo '${{ secrets.SECRETS_FILE }}' > secrets/secrets.json
          mkdir ~/.analytix
          echo '{"token": "${{ github.event.inputs.token }}", "expires": 9999999999.9999999}' > ~/.analytix/youtube-analytics-token.json

      - name: Install dependencies
        run: python -m pip install git+https://github.com/pytest-dev/py nox . --use-feature=in-tree-build

      - name: Run tests
        run: |
          python -m nox -s tests
          mv .coverage .coverage.${{ matrix.os }}.${{ matrix.python-version }}

      - name: Upload coverage to action
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: .coverage.${{ matrix.os }}.${{ matrix.python-version }}
          retention-days: 1
          if-no-files-found: error

  upload-coverage:
    if: ${{ github.event_name }} == "push"
    name: Upload coverage
    needs: test-lib
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: python -m pip install coverage

      - name: Download coverage
        uses: actions/download-artifact@v2
        with:
          name: coverage

      - name: Combine coverage
        run: |
          coverage combine
          coverage xml -i

      - name: Upload coverage to Code Climate
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_REPORTER_ID }}
        with:
          coverageLocations: .coverage.xml:coverage.py
